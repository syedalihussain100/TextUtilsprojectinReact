{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","context/ThemeContext.js","App.js","reportWebVitals.js","context/ThemeState.js","index.js"],"names":["Navbar","toggle","theme","className","href","type","id","role","onChange","checked","TextForm","showalert","useState","text","setText","ref","useRef","useEffect","current","focus","rows","value","e","target","disabled","length","onClick","toUpperCase","document","title","toLowerCase","copyget","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newtext","split","join","style","textDecoration","filter","elm","textAlign","Alert","props","alert","word","lower","charAt","slice","Capatalize","msg","ThemeContext","createContext","App","useContext","setTheme","setAlert","localStorage","setItem","JSON","stringify","setTimeout","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeState","children","parse","getItem","Provider","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d379c9c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar({ toggle, theme }) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${theme ? 'light' : 'dark'} bg-${theme ? 'light' : 'dark'}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">Text Convator</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">Link</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"form-check form-switch mx-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onChange={toggle} checked={theme}/>\r\n                    <span>{theme ? \"Dark Theme\" : \"Light Theme\"}</span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n\r\n// function Navbar({ toggle, theme }) {\r\n//     return (\r\n//         <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//         <div className=\"container-fluid\">\r\n//           <a className=\"navbar-brand\" href=\"#\">Navbar scroll</a>\r\n//           <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n//             <span className=\"navbar-toggler-icon\"></span>\r\n//           </button>\r\n//           <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n//             <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" style=\"--bs-scroll-height: 100px;\">\r\n//               <li className=\"nav-item\">\r\n//                 <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <a className=\"nav-link\" href=\"#\">Link</a>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <a className=\"nav-link disabled\">Link</a>\r\n//               </li>\r\n//             </ul>\r\n//             <form className=\"d-flex\">\r\n//               <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n//               <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </nav>\r\n//     )\r\n// }\r\n\r\n// export default Navbar\r\n\r\n","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nfunction TextForm({ showalert }) {\r\n    const [text, setText] = useState('');\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        ref.current.focus();\r\n    }, [ref])\r\n    const handleUpeer = () => {\r\n        setText(text.toUpperCase())\r\n        showalert('Convert To Uppercase', 'success');\r\n        document.title = \"Text Covator - Convert To Uppercase\";\r\n    }\r\n\r\n    const handlelower = () => {\r\n        setText(text.toLowerCase())\r\n        showalert('Convert To Lowercase', 'primary')\r\n        document.title = \"Text Covator - Convert To Lowercase\";\r\n    }\r\n    const handleChange = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setText(\"\")\r\n        showalert(\"Text Deleted!\", \"danger\");\r\n        document.title = \"Text Covator - Text Deleted\";\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let copyget = document.getElementById(\"mytext\");\r\n        copyget.select();\r\n        navigator.clipboard.writeText(copyget.value);\r\n        document.getSelection().removeAllRanges()\r\n        showalert('Text Copied!', 'success');\r\n        document.title = \"Text Covator - Text Copied\";\r\n    };\r\n\r\n    const handleremove = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        showalert(\"Removed Extra Spaces\", \"danger\");\r\n        document.title = \"Text Covator - Removed Extra Spaces\";\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control mt-4\" id=\"mytext\" rows=\"8\" value={text}\r\n                        onChange={handleChange} ref={ref}\r\n                    />\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-1 btn-sm\" onClick={handleUpeer}>Convert To Uppercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-warning mx-2 my-1 btn-sm\" onClick={handlelower}>Convert To Lowercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-danger my-1 btn-sm mx-2\" onClick={handleClear}>Clear</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary my-1 btn-sm mx-2\" onClick={handleCopy}>Text Copy</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-warning my-1 btn-sm\" onClick={handleremove}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h2 style={{ textDecoration: \"underline\" }}>Your Text Sumarry!</h2>\r\n                <p>{text.split(\" \").filter((elm) => { return elm.length !== 0 }).length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes read..</p>\r\n                <hr />\r\n                <h4 style={{ textDecoration: 'underline' }}>Text Preview</h4>\r\n                <p style={{ textAlign: 'justify' }}>{text.length > 0 ? text : \"Nothing To Preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const Capatalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong> {Capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import { createContext } from 'react';\r\n\r\n\r\nexport const ThemeContext = createContext();\r\n\r\n\r\nexport default ThemeContext;","import React, { useContext, useEffect, useState } from 'react';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport Alert from './component/Alert';\nimport ThemeContext from './context/ThemeContext';\nimport \"./App.css\"\n\nfunction App() {\n      const { theme, setTheme } = useContext(ThemeContext);\n      const [alert, setAlert] = useState(null);\n      useEffect(() => {\n            localStorage.setItem('textutils', JSON.stringify(theme))\n            theme ? document.title = 'Text Convator - LightMode' : document.title = 'Text Convator - DarkMode';\n\n            setTimeout(() => {\n                  document.title = \"Text Convator Is Amazing App!\"\n            }, 1000);\n\n            setTimeout(() => {\n                  document.title = \"Download Text Convator!\"\n            }, 15000);\n      }, [theme])\n      const toggletheme = () => {\n            setTheme(!theme)\n      }\n\n      const showalert = (message, type) => {\n            setAlert({\n                  msg: message,\n                  type: type\n            })\n            setTimeout(() => {\n                  setAlert(null)\n            }, 2000);\n      }\n      return (\n            <div className={theme ? \"light\" : \"dark\"}>\n                  <Navbar toggle={toggletheme} theme={theme} />\n                  <Alert alert={alert} />\n                  <TextForm showalert={showalert} />\n            </div>\n      )\n}\n\n\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\r\nimport ThemeContext from './ThemeContext'\r\n\r\nfunction ThemeState({ children }) {\r\n    const [theme, setTheme] = useState(JSON.parse(localStorage.getItem('textutils')));\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ThemeState\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Themestate from './context/ThemeState';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Themestate>\n      <App />\n    </Themestate>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}